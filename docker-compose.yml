services:
  sql-server-db:
    container_name: sql-server
    user: root
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - 1443:1443
    volumes: 
      - sql-volume:/var/opt/mssql/data    
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_PID=Express
      - MSSQL_TCP_PORT=${MSSQL_TCP_PORT}
      - MSSQL_SA_PASSWORD=${MSSQL_SA_PASSWORD}
      
  social-events-manager:
    container_name: service-api
    image: social-events-manager
    build: ./social-events-manager
    ports:
      - 9090:8080
      - 9091:8081
    depends_on:
      - sql-server-db
    restart: on-failure
    environment:
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_PASSWORD=${DB_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.social-events-manager.rule=Host(`${APP_HOST}`)"
      - "traefik.http.routers.social-events-manager.entrypoints=websecure"
      - "traefik.http.routers.social-events-manager.tls.certresolver=resolver"
        
  traefik:
    image: "traefik:v3.2"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--certificatesresolvers.resolver.acme.httpchallenge=true"
      - "--certificatesresolvers.resolver.acme.httpchallenge.entrypoint=web"
      #- "--certificatesresolvers.resolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.resolver.acme.email=pggaleana@gmail.com"
      - "--certificatesresolvers.resolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

volumes:
  sql-volume: